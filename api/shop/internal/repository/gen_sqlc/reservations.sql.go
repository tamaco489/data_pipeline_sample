// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: reservations.sql

package repository

import (
	"context"
	"time"
)

const createReservation = `-- name: CreateReservation :exec
INSERT INTO reservations (
  id,
  user_id,
  reserved_at,
  expired_at,
  status
) VALUES (
  ?,
  ?,
  ?,
  ?,
  ?
)
`

type CreateReservationParams struct {
	ReservationID string             `json:"reservation_id"`
	UserID        string             `json:"user_id"`
	ReservedAt    time.Time          `json:"reserved_at"`
	ExpiredAt     time.Time          `json:"expired_at"`
	Status        ReservationsStatus `json:"status"`
}

func (q *Queries) CreateReservation(ctx context.Context, db DBTX, arg CreateReservationParams) error {
	_, err := db.ExecContext(ctx, createReservation,
		arg.ReservationID,
		arg.UserID,
		arg.ReservedAt,
		arg.ExpiredAt,
		arg.Status,
	)
	return err
}

const createReservationProduct = `-- name: CreateReservationProduct :exec
INSERT INTO reservation_products (
  reservation_id,
  product_id,
  quantity,
  unit_price
)
VALUES (
  ?,
  ?,
  ?,
  ?
)
`

type CreateReservationProductParams struct {
	ReservationID string `json:"reservation_id"`
	ProductID     uint32 `json:"product_id"`
	Quantity      uint32 `json:"quantity"`
	UnitPrice     uint32 `json:"unit_price"`
}

func (q *Queries) CreateReservationProduct(ctx context.Context, db DBTX, arg CreateReservationProductParams) error {
	_, err := db.ExecContext(ctx, createReservationProduct,
		arg.ReservationID,
		arg.ProductID,
		arg.Quantity,
		arg.UnitPrice,
	)
	return err
}
